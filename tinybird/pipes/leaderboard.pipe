DESCRIPTION >
	The 'production' version based on a Materialized View.


TOKEN "leaderboard_endpoint_read" READ

NODE rank_games
SQL >

    %
        SELECT
            ROW_NUMBER() OVER (ORDER BY total_score DESC, t) AS rank,
            player_id,
            session_id,
            countMerge(scores) AS total_score,
            maxMerge(end_ts) AS t
        FROM user_stats
        GROUP BY player_id, session_id
        ORDER BY rank



NODE last_game
SQL >

    %
      SELECT
          argMax(rank, t) AS rank,
          player_id,
          argMax(session_id, t) AS session_id,
          argMax(total_score, t) AS total_score
      FROM rank_games
      WHERE
          player_id = {{ String(player_id, 'Jim', description="Player to filter on", required=True) }}
      GROUP BY player_id

NODE endpoint
SQL >

    SELECT *
    FROM
        (
            SELECT rank, player_id, session_id, total_score
            FROM rank_games
            WHERE (player_id, session_id) NOT IN (SELECT player_id, session_id FROM last_game)
            LIMIT 10
            UNION ALL
            SELECT rank, player_id, session_id, total_score
            FROM last_game
        )
    ORDER BY rank ASC


